{"ast":null,"code":"var _jsxFileName = \"/Users/angeladu/Desktop/surfboard/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createRef, React } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet exampleData = [{\n  title: 'topic one',\n  timeEstimate: 5,\n  textDescription: 'this is topic 1 description'\n}, {\n  title: 'topic2',\n  timeEstimate: 10,\n  textDescription: 'this is topic 2 description'\n}, {\n  title: 'topic3',\n  timeEstimate: 15,\n  textDescription: 'this is topic 3 description blabdlabdlbwa ahwjkdh awjhd awjwdh hwajk dwja dhwja dwhaj dawj'\n}];\n\nclass editDataModal extends React.Component {\n  constructor(elm) {\n    this.elm = elm;\n    state = {\n      val: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"m-0\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"textFeedback\",\n        as: \"textarea\",\n        rows: \"3\",\n        placeholder: \"feedback\",\n        value: this.state.val,\n        onChange: e => this.setState({\n          val: e.target.value\n        }),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btnFormSend\",\n        variant: \"outline-success\",\n        onClick: this.onSubmit,\n        children: \"Send Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class editDataModal extends= (elm) => {\n//   return (\n//     <div>\n//       <Form id='modify-modal__container'>\n//         <Form.Group>\n//           <Form.Label>Meeting Topic</Form.Label>\n//           <Form.Control type='text' placeholder={elm.title} />\n//         </Form.Group>\n//         <Form.Group>\n//           <Form.Label>Time Estimate</Form.Label>\n//           <Form.Control type='text' placeholder={elm.timeEstimate} />\n//         </Form.Group>\n//         <Form.Group>\n//           <Form.Label>Text Description</Form.Label>\n//           <Form.Control type='text' placeholder={elm.textDescription} />\n//         </Form.Group>\n//         <Button\n//           variant='success'\n//           type='submit'\n//           style={{ backgroundColor: '#5a935ab7' }}\n//           onClick={() => {\n//             // if (this.title !== )\n//           }}\n//         >\n//           Submit\n//         </Button>\n//         <Button\n//           variant='secondary'\n//           type='reset'\n//           style={{ marginLeft: '1vmin' }}\n//           onClick={() => {\n//             if (typeof this.title !== undefined) console.log('hi');\n//           }}\n//         >\n//           Cancel\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\n\nfunction App() {\n  _s();\n\n  const [agendaData, setAgendaData] = useState(exampleData);\n  const [showEdit, setShowEdit] = useState(false);\n  const [curElm, setCurElm] = useState({\n    title: 'new topic',\n    timeEstimate: 'time required',\n    textDescription: 'description'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: [showEdit && editDataModal(curElm, undefined, undefined), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"agenda__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Agenda Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), agendaData.map((elm, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: elm.title + index,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agenda-topic__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                gridColumnStart: 'col1'\n              },\n              children: elm.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: 'center',\n                color: '#5a585C'\n              },\n              children: elm.timeEstimate + 'mins'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: elm.textDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              style: {\n                paddingTop: '40%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              title: \"\",\n              drop: \"end\",\n              size: \"sm\",\n              id: \"dropdown\",\n              variant: \"Secondary\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"1\",\n                onClick: () => {\n                  setCurElm(elm, setAgendaData, index);\n                  setShowEdit(true);\n                },\n                children: \"Modify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"2\",\n                onClick: () => {\n                  document.getElementById(elm.title + index).setAttribute('style', 'display:none');\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, elm.title + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OPNnIhO2sKnPxQFFOZFHPHN63HA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","createRef","React","Dropdown","DropdownButton","Form","Button","exampleData","title","timeEstimate","textDescription","editDataModal","Component","constructor","elm","state","val","render","e","setState","target","value","onSubmit","App","agendaData","setAgendaData","showEdit","setShowEdit","curElm","setCurElm","undefined","map","index","gridColumnStart","textAlign","color","paddingTop","document","getElementById","setAttribute"],"sources":["/Users/angeladu/Desktop/surfboard/src/App.js"],"sourcesContent":["import { useState, createRef, React } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nlet exampleData = [\n  {\n    title: 'topic one',\n    timeEstimate: 5,\n    textDescription: 'this is topic 1 description',\n  },\n  {\n    title: 'topic2',\n    timeEstimate: 10,\n    textDescription: 'this is topic 2 description',\n  },\n  {\n    title: 'topic3',\n    timeEstimate: 15,\n    textDescription: 'this is topic 3 description blabdlabdlbwa ahwjkdh awjhd awjwdh hwajk dwja dhwja dwhaj dawj',\n  },\n];\n\nclass editDataModal extends React.Component {\n  constructor(elm) {\n    this.elm = elm;\n    state = {\n      val: '',\n    };\n  }\n  onSubmit = () => {\n    console.log(this.state.val);\n  };\n\n  render() {\n    return (\n      <Form.Group className='m-0'>\n        <Form.Control\n          className='textFeedback'\n          as='textarea'\n          rows='3'\n          placeholder='feedback'\n          value={this.state.val}\n          onChange={(e) => this.setState({ val: e.target.value })}\n          type='text'\n        />\n        <Button className='btnFormSend' variant='outline-success' onClick={this.onSubmit}>\n          Send Feedback\n        </Button>\n      </Form.Group>\n    );\n  }\n}\n\n// class editDataModal extends= (elm) => {\n//   return (\n//     <div>\n//       <Form id='modify-modal__container'>\n//         <Form.Group>\n//           <Form.Label>Meeting Topic</Form.Label>\n//           <Form.Control type='text' placeholder={elm.title} />\n//         </Form.Group>\n\n//         <Form.Group>\n//           <Form.Label>Time Estimate</Form.Label>\n//           <Form.Control type='text' placeholder={elm.timeEstimate} />\n//         </Form.Group>\n\n//         <Form.Group>\n//           <Form.Label>Text Description</Form.Label>\n//           <Form.Control type='text' placeholder={elm.textDescription} />\n//         </Form.Group>\n\n//         <Button\n//           variant='success'\n//           type='submit'\n//           style={{ backgroundColor: '#5a935ab7' }}\n//           onClick={() => {\n//             // if (this.title !== )\n//           }}\n//         >\n//           Submit\n//         </Button>\n\n//         <Button\n//           variant='secondary'\n//           type='reset'\n//           style={{ marginLeft: '1vmin' }}\n//           onClick={() => {\n//             if (typeof this.title !== undefined) console.log('hi');\n//           }}\n//         >\n//           Cancel\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\nfunction App() {\n  const [agendaData, setAgendaData] = useState(exampleData);\n  const [showEdit, setShowEdit] = useState(false);\n  const [curElm, setCurElm] = useState({ title: 'new topic', timeEstimate: 'time required', textDescription: 'description' });\n\n  return (\n    <div id='App'>\n      {showEdit && editDataModal(curElm, undefined, undefined)}\n\n      <div id='agenda__container'>\n        <h2>Agenda Plan</h2>\n        {agendaData.map((elm, index) => {\n          return (\n            <div id={elm.title + index} key={elm.title + index}>\n              <div className='agenda-topic__container'>\n                <h4 style={{ gridColumnStart: 'col1' }}>{elm.title}</h4>\n                <p style={{ textAlign: 'center', color: '#5a585C' }}>{elm.timeEstimate + 'mins'}</p>\n                <p>{elm.textDescription}</p>\n                {/* <button type=\"button\" class=\"btn btn-light btn-sm\">Edit</button> */}\n\n                <Form style={{ paddingTop: '40%' }}>\n                  <Form.Check type='checkbox' label='' />\n                </Form>\n\n                <DropdownButton title='' drop='end' size='sm' id='dropdown' variant='Secondary'>\n                  <Dropdown.Item\n                    eventKey='1'\n                    onClick={() => {\n                      setCurElm(elm, setAgendaData, index);\n                      setShowEdit(true);\n                    }}\n                  >\n                    Modify\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    eventKey='2'\n                    onClick={() => {\n                      document.getElementById(elm.title + index).setAttribute('style', 'display:none');\n                    }}\n                  >\n                    Delete\n                  </Dropdown.Item>\n                </DropdownButton>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}